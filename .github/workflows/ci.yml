name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Trigger on push to the main branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Build backend with Maven
        run: |
          mvn clean package -DskipTests
        working-directory: ${{ github.workspace }} # Ensure commands run from the root

      - name: Install frontend dependencies and build
        run: |
          cd frontend
          npm install
          npm run build
        working-directory: ${{ github.workspace }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: List files in root for debugging
        run: ls -R
        working-directory: ${{ github.workspace }}

      - name: Build and push backend Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.BACKEND_IMAGE_NAME }}:latest, ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.BACKEND_IMAGE_NAME }}:${{ github.sha }}
          file: Dockerfile # Relative to context, with working-directory set
        working-directory: ${{ github.workspace }}

      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.FRONTEND_IMAGE_NAME }}:latest, ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.FRONTEND_IMAGE_NAME }}:${{ github.sha }}
          file: Dockerfile # Path to Dockerfile relative to the context
        working-directory: ${{ github.workspace }}/frontend

      # - name: Deploy to server (Example - requires SSH setup and server configuration)
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USERNAME }}
      #     key: ${{ secrets.SERVER_SSH_KEY }}
      #     script: |
      #       cd /path/to/your/app
      #       docker-compose pull backend frontend
      #       docker-compose up -d --force-recreate
